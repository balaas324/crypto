{"version":3,"sources":["Coin.js","Headbar.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","Headbar","App","useState","coins","setCoins","search","setSearch","sortType","setSortType","useEffect","axios","then","res","data","catch","error","console","log","type","sortProperty","sorted","sort","a","b","localeCompare","sortArray","filteredCoins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fab92d51.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Coin.css'\r\n\r\nfunction Coin({name, image, symbol, price, volume, priceChange, marketcap}) {\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <img src={image} alt=\"crypto\"/>\r\n                    <h1>{name}</h1>\r\n                    <p className=\"coin-symbol\">{symbol}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">HUF {price.toLocaleString()}</p>\r\n                    {priceChange < 0 ? \r\n                    (\r\n                        <p className=\"price-change red\">{priceChange.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className=\"price-change green\">{priceChange.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className=\"coin-volume\">HUF {volume.toLocaleString()}</p>\r\n                    <p className=\"coin-marketcap\"> HUF {marketcap.toLocaleString()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin","import React from 'react'\r\nimport './Coin.css'\r\n\r\n\r\nexport const Headbar = () => {\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <h1>name</h1>\r\n                    <p className=\"coin-symbol\">symbol</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">price</p>\r\n                    <p className=\"price-change\">priceChange</p> \r\n                    <p className=\"coin-volume\">volume</p>  \r\n                    <p className=\"coin-marketcap\">market cap</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\nimport React, {useState, useEffect, } from 'react';\nimport './App.css';\nimport Coin from './Coin'\nimport { Headbar } from './Headbar';\n \nfunction App() {\n\n  const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState('')\n  //const [data, setData] =useState([])\n  const [sortType, setSortType] = useState('name')\n  \n  useEffect(()=>{\n    axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=huf&order=market_cap_desc&per_page=20&page=1&sparkline=false')\n    .then(res => {\n      setCoins(res.data)\n    })\n    .catch(error => console.log(error))\n  },[])\n\n  useEffect(()=>{\n      const sortArray=type=>{\n        const types={\n          name: \"name\",\n          price: \"current_price\",\n          priceChange: 'price_change_percentage_24h',\n        }\n        const sortProperty = types[type];\n        const sorted = [...coins].sort((a, b)=>{\n          if (sortProperty === 'name') {\n            return a.name.localeCompare(b.name)\n          } else {\n            return b[sortProperty] - a[sortProperty]\n          }\n        })\n        console.log(sorted);\n        setCoins(sorted);\n      }\n      sortArray(sortType);\n  }, [sortType]);\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin => \n    coin.name.toLowerCase().includes(search.toLowerCase())  \n  ); \n\n  return (\n    <div className=\"coin-app\">\n        <div className=\"coin-search\">\n          <h1 className=\"coin-text\">search a currency</h1>\n          <form>\n            <input className=\"coin-input\"\n            type=\"text\" placeholder=\"search\"\n            onChange={handleChange}\n            />\n          </form>\n          <select onChange={(e)=>setSortType(e.target.value)}>\n            <option value=\"name\">name</option>\n            <option value=\"price\">price</option>\n            <option value=\"priceChange\">price change</option>\n          </select>\n        </div>\n        <Headbar />\n        {filteredCoins.map(coin => {\n          return (\n            <Coin \n            key={coin.id} \n            name={coin.name} \n            image={coin.image} \n            symbol={coin.symbol}\n            marketcap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume={coin.total_volume}\n            />\n          )\n        })}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}